{"version":3,"sources":["components/Logo/Logo.svg","components/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","status","react_default","a","createElement","className","onClick","Logo","tilt_default","options","max","style","height","width","alt","src","LogoImg","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","concat","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","email","target","value","onPasswordChange","password","fetch","method","headers","Content-Type","body","JSON","stringify","state","then","response","json","user","id","loadUser","htmlFor","React","Component","Register","onNameChange","console","log","FaceRecognition","box","imageURL","length","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","initialState","input","route","loggedIn","joined","particleOptions","particles","number","opacity","random","anim","enable","speed","opacity_min","sync","line_linked","distance","color","App","data","calculateFaceLocation","faceBox","outputs","regions","region_info","bounding_box","image","document","getElementById","imageWidth","Number","imageHeight","left_col","top_row","right_col","bottom_row","displayFaceBox","count","assign","catch","err","_this$state","particles_default","params","src_components_Logo_Logo","components_Navigation","components_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4RCgBzBC,EAdI,SAAAC,GAA6B,IAA3BC,EAA2BD,EAA3BC,cACjB,OACe,IAF6BD,EAAZE,OAG1BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAA4CC,QAAS,kBAAMN,EAAc,YAAtF,WACAE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAA4CC,QAAS,kBAAMN,EAAc,cAAtF,aAEJE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAA4CC,QAAS,kBAAMN,EAAc,aAAtF,8CCKDO,SAVF,WACT,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAME,UAAU,OAAOI,QAAS,CAAEC,IAAM,IAAMC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,MACvEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,OAAKU,IAAI,OAAOC,IAAKC,WCUlDC,SAhBO,SAAAlB,GAAiC,IAA9BmB,EAA8BnB,EAA9BmB,cAAeC,EAAepB,EAAfoB,SACpC,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WACR,uEAELH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mDAAmDe,KAAK,OAAOC,SAAUH,IAC1FhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2DAA2DC,QAASa,GAAtF,eCOLG,EAjBF,SAAAvB,GAAqB,IAAnBwB,EAAmBxB,EAAnBwB,KAAMC,EAAazB,EAAbyB,QACjB,OACItB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,cAAAqB,OACQF,EADR,sCAIJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,WACKoB,MC2DNE,cApEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,cAAgB,SAACC,GACbR,EAAKS,SAAS,CAACC,MAAOF,EAAMG,OAAOC,SARpBZ,EAWnBa,iBAAmB,SAACL,GAChBR,EAAKS,SAAS,CAACK,SAAUN,EAAMG,OAAOC,SAZvBZ,EAenBT,SAAW,WACPwB,MAAM,+BAAgC,CAClCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBX,MAAOV,EAAKsB,MAAMZ,MAClBI,SAAUd,EAAKsB,MAAMR,aAGxBS,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACEA,EAAKC,KACL3B,EAAKD,MAAM6B,SAASF,GACpB1B,EAAKD,MAAM3B,cAAc,YA1BrC4B,EAAKsB,MAAQ,CACTZ,MAAO,GACPI,SAAU,IAJCd,wEAkCV,IACG5B,EAAkB+B,KAAKJ,MAAvB3B,cACR,OACIE,EAAAC,EAAAC,cAAA,WAASC,UAAU,+DACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,YAAUmD,GAAG,UAAUlD,UAAU,6BAC7BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoD,QAAQ,iBAA7C,SACAvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEACVe,KAAK,QAAQG,KAAK,gBAAgBgC,GAAG,gBAAgBlC,SAAUU,KAAKI,iBAE/EjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoD,QAAQ,YAA7C,YACAvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uEACVe,KAAK,WAAWG,KAAK,WAAWgC,GAAG,WAAWlC,SAAUU,KAAKU,oBAExEvC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BAA6BH,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,aAA1D,iBAEJlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uEACVe,KAAK,SAASd,QAASyB,KAAKZ,UADpC,YAGJjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAA8BC,QAAS,kBAAMN,EAAc,cAAxE,uBA5DP0D,IAAMC,WC4EZC,cA3EX,SAAAA,EAAYjC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6B,IACfhC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+B,GAAA1B,KAAAH,KAAMJ,KAOVQ,cAAgB,SAACC,GACbR,EAAKS,SAAS,CAACC,MAAOF,EAAMG,OAAOC,SATpBZ,EAYnBa,iBAAmB,SAACL,GAChBR,EAAKS,SAAS,CAACK,SAAUN,EAAMG,OAAOC,SAbvBZ,EAgBnBiC,aAAe,SAACzB,GACZR,EAAKS,SAAS,CAACd,KAAMa,EAAMG,OAAOC,SAjBnBZ,EAoBnBT,SAAW,WACPwB,MAAM,iCAAkC,CACpCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBX,MAAOV,EAAKsB,MAAMZ,MAClBI,SAAUd,EAAKsB,MAAMR,SACrBnB,KAAMK,EAAKsB,MAAM3B,SAGpB4B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACEA,EAAKC,KACLO,QAAQC,IAAI,gBACZnC,EAAKD,MAAM6B,SAASF,GACpB1B,EAAKD,MAAM3B,cAAc,YAjCrC4B,EAAKsB,MAAQ,CACTZ,MAAO,GACPI,SAAU,GACVnB,KAAM,IALKK,wEA0Cf,OACI1B,EAAAC,EAAAC,cAAA,WAASC,UAAU,+DACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,YAAUmD,GAAG,UAAUlD,UAAU,6BAC7BH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoD,QAAQ,QAA7C,QACAvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEACVe,KAAK,OAAOG,KAAK,OAAOgC,GAAG,OAAOlC,SAAUU,KAAK8B,gBAE5D3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoD,QAAQ,iBAA7C,SACAvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEACVe,KAAK,QAAQG,KAAK,QAAQgC,GAAG,QAAQlC,SAAUU,KAAKI,iBAE/DjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBoD,QAAQ,YAA7C,YACAvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uEACVe,KAAK,WAAWG,KAAK,WAAWgC,GAAG,WAAWlC,SAAUU,KAAKU,qBAG5EvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uEACVe,KAAK,SAASd,QAASyB,KAAKZ,UADpC,uBAlELuC,IAAMC,WCgBdK,SAfS,SAAAjE,GAAqB,IAAnBkE,EAAmBlE,EAAnBkE,IAAKC,EAAcnE,EAAdmE,SAC3B,OACIhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACT6D,EAASC,OACPjE,EAAAC,EAAAC,cAAA,OAAKmD,GAAG,aAAazC,IAAK,QAASC,IAAKmD,EAAUrD,MAAO,QAASD,OAAO,SADzDV,EAAAC,EAAAC,cAAA,UAEpBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVM,MAAO,CAACyD,IAAKH,EAAII,OAAQC,MAAOL,EAAIM,SAAUC,OAAQP,EAAIQ,UAAWC,KAAMT,EAAIU,wCCE9FC,SAAe,CACjBC,MAAO,GACPX,SAAU,GACVD,IAAK,GACLa,MAAO,SACPC,UAAU,EACVzB,KAAM,CACFC,GAAI,GACJhC,KAAM,GACNe,MAAO,GACPd,QAAS,EACTwD,OAAQ,MAIVC,EAAkB,CACpBC,UAAa,CACTC,OAAU,CACN3C,MAAS,IAEb4C,QAAW,CACP5C,MAAS,GACT6C,QAAU,EACVC,KAAQ,CACJC,QAAU,EACVC,MAAS,EACTC,YAAe,GACfC,MAAQ,IAGhBC,YAAe,CACXJ,QAAU,EACVK,SAAY,IACZC,MAAS,UACTT,QAAW,GACXvE,MAAS,KAmHNiF,cA7GX,SAAAA,IAAc,IAAAlE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACVlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,QAIJyB,SAAW,SAACuC,GACRnE,EAAKS,SAAS,CAACiB,KAAM,CACbC,GAAIwC,EAAKxC,GACThC,KAAMwE,EAAKxE,KACXe,MAAOyD,EAAKzD,MACZd,QAASuE,EAAKvE,QACdwD,OAAQe,EAAKf,WAXXpD,EAedoE,sBAAwB,SAACD,GACrB,IAAME,EAAUF,EAAKG,QAAQ,GAAGH,KAAKI,QAAQ,GAAGC,YAAYC,aACtDC,EAAQC,SAASC,eAAe,cAChCC,EAAaC,OAAOJ,EAAMzF,OAC1B8F,EAAcD,OAAOJ,EAAM1F,QACjC,MAAO,CACH+D,QAASsB,EAAQW,SAAWH,EAC5BpC,OAAQ4B,EAAQY,QAAUF,EAC1BpC,SAAUkC,EAAcR,EAAQa,UAAYL,EAC5ChC,UAAWkC,EAAeV,EAAQc,WAAaJ,EAC/C5B,UAAU,IAzBJnD,EA6BdoF,eAAiB,SAAC/C,GACdrC,EAAKS,SAAS,CAAC4B,IAAKA,KA9BVrC,EAiCdV,cAAgB,SAACkB,GACbR,EAAKS,SAAS,CAACwC,MAAOzC,EAAMG,OAAOC,SAlCzBZ,EAqCdT,SAAW,WACPS,EAAKS,SAAS,CAAC6B,SAAUtC,EAAKsB,MAAM2B,QACpClC,MAAM,iCAAkC,CACpCC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjB4B,MAAOjD,EAAKsB,MAAM2B,UAGrB1B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACEA,GACAT,MAAM,8BAA+B,CACjCC,OAAQ,MACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBM,GAAI3B,EAAKsB,MAAMI,KAAKC,OAGvBJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA8D,GACFrF,EAAKS,SAASR,OAAOqF,OAAOtF,EAAKsB,MAAMI,KAAM,CAAE9B,QAASyF,OAE3DE,MAAM,SAAAC,GAAG,OAAItD,QAAQC,MAE9BnC,EAAKoF,eAAepF,EAAKoE,sBAAsB5C,MAElD+D,MAAM,SAAAC,GAAG,OAAItD,QAAQC,IAAIqD,MAhEpBxF,EAmEd5B,cAAgB,SAAC8E,GACC,YAAVA,GACAhB,QAAQC,IAAI,eACZnC,EAAKS,SAASuC,IACG,SAAVE,IACPhB,QAAQC,IAAI,cACZnC,EAAKS,SAAS,CAAC0C,UAAU,KAE7BnD,EAAKS,SAAS,CAACyC,MAAOA,KAzEtBlD,EAAKsB,MAAQ0B,EAFHhD,wEA8EL,IAAAyF,EACsCtF,KAAKmB,MAAxC6B,EADHsC,EACGtC,SAAUb,EADbmD,EACanD,SAAUY,EADvBuC,EACuBvC,MAAOb,EAD9BoD,EAC8BpD,IACpC,OACG/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAWoH,OAAQtC,EAAiB5E,UAAU,cAC9CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACoH,EAAD,OAEJtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACqH,EAAD,CAAYxH,OAAQ8E,EAAU/E,cAAe+B,KAAK/B,kBAG/C,SAAV8E,EACK5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsH,EAAD,CAAMnG,KAAMQ,KAAKmB,MAAMI,KAAK/B,KAAMC,QAASO,KAAKmB,MAAMI,KAAK9B,UAC3DtB,EAAAC,EAAAC,cAACuH,EAAD,CAAezG,cAAea,KAAKb,cAAeC,SAAUY,KAAKZ,WACjEjB,EAAAC,EAAAC,cAACwH,EAAD,CAAiB3D,IAAKA,EAAKC,SAAUA,KAG1B,WAAVY,GAAkC,YAAVA,EACvB5E,EAAAC,EAAAC,cAACyH,EAAD,CAAQrE,SAAUzB,KAAKyB,SAAUxD,cAAe+B,KAAK/B,gBACjDE,EAAAC,EAAAC,cAAC0H,EAAD,CAAUtE,SAAUzB,KAAKyB,SAAUxD,cAAe+B,KAAK/B,wBAtGjE2D,aCxCEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnI,EAAAC,EAAAC,cAACkI,EAAD,MAAS/B,SAASC,eAAe,SDuH3C,kBAAmB+B,WACrBA,UAAUC,cAAcC,MAAMtF,KAAK,SAAAuF,GACjCA,EAAaC","file":"static/js/main.b5b3810a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3686b39a.svg\";","import React from 'react';\n\nconst Navigation = ({onRouteChange, status}) => {\n    return (\n        status === false\n        ? <nav className='center'>\n                <p className='pa3 tr f3 link dim gray underline pointer' onClick={() => onRouteChange('signIn')}>Sign In</p>\n                <p className='pa3 tr f3 link dim gray underline pointer' onClick={() => onRouteChange('register')}>Register</p>\n            </nav> :\n            <nav className='center'>\n                <p className='pa3 tr f3 link dim gray underline pointer' onClick={() => onRouteChange('signOut')}>Sign Out</p>\n            </nav>\n\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt'\nimport LogoImg from './Logo.svg';\nimport './Logo.css';\n\nconst Logo = () => {\n    return (\n        <div className='ma4 mt0'>\n            <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner\"><img alt='logo' src={LogoImg}/></div>\n            </Tilt>\n        </div>\n    );\n};\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\n    return (\n        <div className='ma4 mt0'>\n            <p className='f3 gray'>\n                {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n            </p>\n            <div className='center'>\n                <div className='form pa4 br3 box center'>\n                    <input className='f4 pa2 br3 b--none mr2 pr5 w-80 light-gray input' type='text' onChange={onInputChange}/>\n                    <button className='w-20 grow f4 link ph3 b--none pv2 br3 pl2 dib light-gray' onClick={onSubmit}>Detect</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n    return (\n        <div>\n            <div className='tc f3 link dim gray pa3'>\n                <div>\n                    {`${name}, your current entry count is...`}\n                </div>\n            </div>\n            <div className='tc f1 link dim light-gray pa3'>\n                <div>\n                    {entries}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Rank;","import React from 'react';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    };\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    };\n\n    onSubmit = () => {\n        fetch('http://localhost:4400/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home')\n                }\n            })\n\n    };\n\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--gray dark-gray mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 gray\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                       type=\"email\" name=\"email-address\" id=\"email-address\" onChange={this.onEmailChange}/>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                       type=\"password\" name=\"password\" id=\"password\" onChange={this.onPasswordChange}/>\n                            </div>\n                            <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\"/> Remember me</label>\n                        </fieldset>\n                        <div className=\"\">\n                            <button className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                    type=\"submit\" onClick={this.onSubmit}>Sign In</button>\n                        </div>\n                        <div className='lh-copy mt3'>\n                            <p className='f6 link dim gray db pointer' onClick={() => onRouteChange('register')}>Register</p>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    };\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    };\n\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    };\n\n    onSubmit = () => {\n        fetch('http://localhost:4400/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    console.log('Ya fucked up');\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home')\n                }\n            })\n\n    };\n\n    render() {\n        return (\n            <article className=\"br3 ba b--gray dark-gray mv4 w-100 w-50-m w-25-l mw6 center\">\n                <main className=\"pa4 gray\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                       type=\"text\" name=\"name\" id=\"name\" onChange={this.onNameChange}/>\n                            </div>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                       type=\"email\" name=\"email\" id=\"email\" onChange={this.onEmailChange}/>\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                       type=\"password\" name=\"password\" id=\"password\" onChange={this.onPasswordChange}/>\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <button className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                                    type=\"submit\" onClick={this.onSubmit}>Register</button>\n                        </div>\n                    </div>\n                </main>\n            </article>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({box, imageURL}) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2'>\n                {!imageURL.length ? <p></p> :\n                    <img id='inputImage' alt={'Input'} src={imageURL} width={'500px'} height='auto'/>}\n                <div className='bounding-box'\n                     style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation';\nimport Logo from '../components/Logo/Logo';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport Rank from '../components/Rank';\nimport SignIn from '../components/SignIn/SignIn';\nimport Register from '../components/Register/Register';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport 'tachyons';\n\nconst initialState = {\n    input: '',\n    imageURL: '',\n    box: '',\n    route: 'signIn',\n    loggedIn: false,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n};\n\nconst particleOptions = {\n    \"particles\": {\n        \"number\": {\n            \"value\": 42\n        },\n        \"opacity\": {\n            \"value\": 0.3,\n            \"random\": false,\n            \"anim\": {\n                \"enable\": false,\n                \"speed\": 1,\n                \"opacity_min\": 0.1,\n                \"sync\": false\n            }\n        },\n        \"line_linked\": {\n            \"enable\": true,\n            \"distance\": 150,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.2,\n            \"width\": 1\n        }\n    }\n};\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = initialState\n    }\n\n    loadUser = (data) => {\n        this.setState({user: {\n                id: data.id,\n                name: data.name,\n                email: data.email,\n                entries: data.entries,\n                joined: data.joined\n            }})\n    };\n\n    calculateFaceLocation = (data) => {\n        const faceBox = data.outputs[0].data.regions[0].region_info.bounding_box;\n        const image = document.getElementById('inputImage');\n        const imageWidth = Number(image.width);\n        const imageHeight = Number(image.height);\n        return {\n            leftCol: faceBox.left_col * imageWidth,\n            topRow: faceBox.top_row * imageHeight,\n            rightCol: imageWidth - (faceBox.right_col * imageWidth),\n            bottomRow: imageHeight - (faceBox.bottom_row * imageHeight),\n            loggedIn: false\n        }\n    };\n\n    displayFaceBox = (box) => {\n        this.setState({box: box})\n    };\n\n    onInputChange = (event) => {\n        this.setState({input: event.target.value})\n    };\n\n    onSubmit = () => {\n        this.setState({imageURL: this.state.input});\n        fetch('http://localhost:4400/imageurl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                input: this.state.input\n            })\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response) {\n                    fetch('http://localhost:4400/image', {\n                        method: 'put',\n                        headers: {'Content-Type': 'application/json'},\n                        body: JSON.stringify({\n                            id: this.state.user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(count => {\n                            this.setState(Object.assign(this.state.user, { entries: count}))\n                        })\n                        .catch(err => console.log)\n                }\n                this.displayFaceBox(this.calculateFaceLocation(response))\n            })\n            .catch(err => console.log(err));\n    };\n\n    onRouteChange = (route) => {\n        if (route === 'signOut') {\n            console.log('Signing Out');\n            this.setState(initialState)\n        } else if (route === 'home') {\n            console.log('Going Home');\n            this.setState({loggedIn: true})\n        }\n        this.setState({route: route})\n    };\n\n    render() {\n        const { loggedIn, imageURL, route, box } = this.state;\n       return (\n          <div className=\"App\">\n              <Particles params={particleOptions} className='particles'/>\n              <div className='center'>\n                  <div className='w-20'>\n                      <Logo/>\n                  </div>\n                  <div className='w-40'></div>\n                  <div className='w-40'>\n                      <Navigation status={loggedIn} onRouteChange={this.onRouteChange} />\n                  </div>\n              </div>\n              {route === 'home'\n                  ? <div>\n                      <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                      <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n                      <FaceRecognition box={box} imageURL={imageURL} />\n                    </div>\n                  : (\n                      (route === 'signIn') || (route === 'signOut')\n                      ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                  )\n              }\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}